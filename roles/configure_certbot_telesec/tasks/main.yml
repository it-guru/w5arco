---
- name: "configure certbot and do initial config for {{httpd_sitename | default('???')}}"
  tags: [configure_certbot_telesec]
  when: 
     - certbot_install | bool is true
     - acme_url|default('') != ""
     - acme_key_identifier|default('') != ""
     - acme_hmac_key|default('') != ""

  block:
   - name: "calc registername path"
     set_fact:
        acme_register_name_path: "{{inventory_hostname}}"

   - name: "add httpd_sitename if specified"
     set_fact: 
        acme_register_name_path: "{{acme_register_name_path}},{{httpd_sitename}}"
     when:
        - httpd_sitename|default('') != ""
        - httpd_sitename!=inventory_hostname

   - name: "get ansible_fqdn_host"
     shell: "set -- $(nslookup {{ansible_host}} | grep Name:) ; echo $2"
     register: ansible_fqdn_hostname
     changed_when: False
     ignore_errors: true

   - name: "stripe ansible_fqdn_host to 1st Line"
     set_fact: 
       ansible_fqdn_hostname: "{{ansible_fqdn_hostname.stdout_lines[0]|default('')}}"

   - name: "add ansible_fqdn_hostname if specified"
     set_fact: 
        acme_register_name_path: "{{acme_register_name_path}},{{ansible_fqdn_hostname}}"
     when:
        - ansible_fqdn_hostname|default('') != ""
        - ansible_fqdn_hostname!=inventory_hostname
        - ansible_fqdn_hostname!=httpd_sitename

   - name: "debug start certbot config"
     debug:
       msg:
         - "acme_force_register     = {{acme_force_register}}"
         - "acme_register_name_path = {{acme_register_name_path}}"
         - "ansible_fqdn_hostname   = {{ansible_fqdn_hostname}}"
         - "acme_url                = {{acme_url}}"
         - "acme_key_identifier     = {{acme_key_identifier}}"
         - "acme_hmac_key           = {{acme_hmac_key}}"
 
   - name: "ensure /etc/letsencrypt"
     file:
       state: directory
       path:  "/etc/letsencrypt"
       mode:  0755
       owner: root
       group: root
     become: true

   - name: "ensure /etc/letsencrypt/live"
     file:
       state: directory
       path:  "/etc/letsencrypt/live"
       mode:  0755
       owner: root
       group: root
     become: true

   - name: "ensure /etc/letsencrypt/archive"
     file:
       state: directory
       path:  "/etc/letsencrypt/archive"
       mode:  0755
       owner: root
       group: root
     become: true

   - name: "remove old renewal.conf"
     file:
       path: "/etc/letsencrypt/renewal/{{inventory_hostname}}.conf"
       state: absent
     become: true
     when: acme_force_register|bool is true

   - name: "check stat of renewal.conf"
     stat:
       path: "/etc/letsencrypt/renewal/{{inventory_hostname}}.conf"
     become: true
     register: renewalFile

   - name: "check /etc/letsencrypt/live/{{inventory_hostname}}"
     stat:
       path: "/etc/letsencrypt/live/{{inventory_hostname}}"
     become: true
     register: liveDir

   - name: "mv old live dir"
     shell: "mv /etc/letsencrypt/live/{{inventory_hostname}} \\
             /etc/letsencrypt/live/{{inventory_hostname}}.$(date +\"%Y%m%d%H%M%S\")"
     become: true
     when:  >
       (liveDir.stat.exists is true and
        acme_force_register|bool is true) or
       (liveDir.stat.exists is true and
        renewalFile.stat.exists is false)

   - name: "check /etc/letsencrypt/archive/{{inventory_hostname}}"
     stat:
       path: "/etc/letsencrypt/archive/{{inventory_hostname}}"
     become: true
     register: archiveDir

   - name: "mv old archive dir"
     shell: "mv /etc/letsencrypt/archive/{{inventory_hostname}} \\
             /etc/letsencrypt/archive/{{inventory_hostname}}.$(date +\"%Y%m%d%H%M%S\")"
     become: true
     when:  
       - archiveDir.stat.exists is true
       - acme_force_register|bool is true

   - name: "Register certbot for {{acme_register_name_path}}"
     shell: |
       certbot certonly --eab-kid "{{acme_key_identifier}}" --eab-hmac-key "{{acme_hmac_key}}" --server "{{acme_url}}" --email "{{acme_notification_email}}" --agree-tos --webroot -d "{{acme_register_name_path}}" -n --webroot-path "{{acme_document_root}}" --rsa-key-size "{{acme_rsa_key_size}}"
     args:
       creates: "/etc/letsencrypt/renewal/{{inventory_hostname}}.conf"
     notify: restarthttpd
     become: true

   - name: "register deploy hook"
     template:
       src:  "restartApache.sh.j2"
       dest: "/etc/letsencrypt/renewal-hooks/deploy/restartApache.sh"
       owner: root
       group: root
       mode: '0755'
     become: true

   #
   # a random wait is not needed - to ensuren a overload prevention on ca.
   # see --no-random-sleep-on-renew discussion on 
   # https://github.com/NginxProxyManager/nginx-proxy-manager/issues/238
   #
   - name: "install renew job"
     ansible.builtin.cron:
       name: "certbot renew"
       state: "present"
       minute: "{{acme_auto_renew_minute}}"
       hour: "{{acme_auto_renew_hour}}"
       job: "certbot -q renew"
     become: true


   - name: "install force renew job"
     ansible.builtin.cron:
       name: "certbot force renew"
       minute: "{{(acme_auto_renew_minute|int)+1}}"
       day: "{{acme_force_renew_day}}"
       hour: "{{acme_auto_renew_hour}}"
       job: "certbot renew -q --force-renewal"
     become: true
     when: 
       - acme_force_renew_day|default('') != ""

  rescue:
   - name: "block rescue to ensure following roles processing"
     debug:
       msg: "error ocured - there is need to handle it manualy"


#
# Minimum/recomented requirements in ssl.conf of apache
#
#ServerName xxxxx.telekom.de
#SSLCertificateFile /etc/letsencrypt/live/xxx.telekom.de/fullchain.pem
#SSLCertificateKeyFile /etc/letsencrypt/live/xxx.telekom.de/privkey.pem
#SSLEngine on
#SSLProtocol             all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
#SSLCipherSuite          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
#SSLHonorCipherOrder     off
#SSLSessionTickets       off

#SSLOptions +StrictRequire




