---
- name: install ZABBIX Agent
  tags: [install_zabbix]
  when: zabbix_install | bool is true
  block:
   - name: create zabbix group - gid does not matter
     ansible.builtin.group:
       name: zabbix
       state: present
     become: true

   - name: create zabbix user - uid does not matter
     ansible.builtin.user:
       name: zabbix
       group: zabbix
       expires: -1
       comment: zabbix monitoring user
     become: true

   - name: "check ansible file cache dir"
     ansible.builtin.file:
        state: directory
        path: "/var/cache/ansible"
        owner: "root"
        group: "root"
        mode: '0750'
     become: true

   - name: check cache dir
     stat: path="/var/cache/ansible"
     register: AnsibleCacheDir
     become: true

   - name: "check /opt/zabbix_agent target directory"
     ansible.builtin.file:
        state: directory
        path: "/opt/zabbix_agent"
        owner: "zabbix"
        group: "zabbix"
        mode: '0755'
     become: true
     when: 
        - not ansible_check_mode 

   - name: check already installed Zabbix Agent
     ansible.builtin.stat:
       path: "/opt/zabbix_agent/sbin/zabbix_agentd"
     register: alreadyInst
     become: true

   - name: create directory for ansible server cache dir
     file:
       path: "{{ansiblesrv_var_base}}/webcache/zabbix/"
       state: directory
       mode: '2770'
     run_once: true
     delegate_to: localhost


   - name: "Download file with cache handling on ansible control node"
     block: 
      - name: "Download latest zabbix client from Zabbix Site"
        ansible.builtin.get_url:
          url: "{{srcurl}}"
          dest: "{{ansiblesrv_var_base}}/webcache/zabbix/{{zabbix_agent_srctar}}"
          backup: true
          use_netrc: false
          timeout: 60
          force: true
          mode: 0660
          group: ansible
        ignore_errors: yes
        delegate_to: localhost
        register: DownloadResult

      # touch is needed, because ansible not updates mdate on successfull
      # download from source-url
      - name: "touch file, if download was OK"
        file:
          state: "file"
          path: "{{ansiblesrv_var_base}}/webcache/zabbix/{{zabbix_agent_srctar}}"
          modification_time: "now"
        ignore_errors: true
        changed_when: false
        when:
          - DownloadResult.status_code==200
        delegate_to: localhost

      - name: find all webcache files older than 30 days
        find:
          paths: "{{ansiblesrv_var_base}}/webcache/zabbix"
          age: 30d
          recurse: yes
        register: oldFiles
        delegate_to: localhost

      - name: remove older than 30 days
        file:
          path: "{{ item.path }}" 
          state: absent
        with_items: "{{ oldFiles.files }}"
        delegate_to: localhost
     rescue:
      - name: "rescue WebCache donwload-Handling"
        debug:
          msg: "error ocured - there is need to handle it manualy"

   - name: check local (ansible server) cache
     ansible.builtin.stat:
       path: "{{ansiblesrv_var_base}}/webcache/zabbix/{{zabbix_agent_srctar}}"
     register: localCache
     delegate_to: localhost

   - name: "Fail to find a webCached {{zabbix_agent_srctar}}"
     fail:
       msg: "Whoops! can not find a useable {{zabbix_agent_srctar}}"
     when: localCache.stat.exists is false
     delegate_to: localhost


   - name: Copy file
     ansible.builtin.copy:
       src: "{{ansiblesrv_var_base}}/webcache/zabbix/{{zabbix_agent_srctar}}"
       dest: "/var/cache/ansible"
     when: AnsibleCacheDir.stat.exists==true
     become: true

   - name: "transfer local cached {{zabbix_agent_srctar}} to remote system"
     copy:
       src: "{{localCache.stat.path}}"
       dest: "/var/cache/ansible/{{zabbix_agent_srctar}}"
     when: localCache.stat.exists
     become: true

   - name: check remote cache
     ansible.builtin.stat:
       path: "/var/cache/ansible/{{zabbix_agent_srctar}}"
     register: remoteCache
     become: true

   - name: "run remote unpack of zabbix agent"
     shell: "mkdir /tmp/zabbixinst.temp;tar -xvf /var/cache/ansible/{{zabbix_agent_srctar}}  -C /tmp/zabbixinst.temp"
     ignore_errors: true
     when: 
        - remoteCache.stat.exists is true
        - alreadyInst.stat.exists is false
     become: true

   - name: Install Zabbix Agent
     ansible.builtin.shell: "./install.sh -ni -proxyip {{zabbix_proxyip}} >> zabbix_install_log.txt"
     args:
       chdir: /tmp/zabbixinst.temp/zabbix_installer
       creates: /opt/zabbix_agent/sbin/zabbix_agentd
     when: 
        - remoteCache.stat.exists is true
        - alreadyInst.stat.exists is false
        - not ansible_check_mode
     notify: restartzabbix
     become: true

   - name: "cleanup temp dir /tmp/zabbixinst.temp"
     ansible.builtin.file:
        state: absent
        path: "/tmp/zabbixinst.temp"
     when: 
        - alreadyInst.stat.exists is false
     become: true

  rescue:
   - name: "block rescue to ensure following roles processing"
     debug:
       msg: "error ocured - there is need to handle it manualy"

